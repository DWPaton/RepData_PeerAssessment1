{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n##Introduction\n\nThis report will examine the data produced by an activity monitoring device for an anonymous subject between the 1st October to 30th November 2012.\nPart of this data is missing and a major section of the analysis is to fill in the missing data with appropriate values and compare the raw and fixed result sets by virtue of histograms of the distribution of step totals for each weekday (Monday to Sunday). Means and medians will also be compared.\nOther facets of the analysis will be to examine the averages over a series of 5 minute intervals, both as a whole and in terms of the comparison between between weekdays and weekends.\n\n##Methodology and Assumptions\nI have used the ggplot2 graphing package, as I feel that it gives a more attractive look to the figures. I spent quite a while thinking about the scaling for the x axes of the figures and I eventually decided to use the layout of the example figure, the logic being not to second guess the specification. Having said that, there is a slight disparity in the final figure in that the headings appear on the right rather than on top. I was able to produce the exact figure using the lattice package but the style looked incongruous compared to the other graphs so reverted to the ggplot2 version. I also assume that the data has been downloaded and unzipped, prior to the start of the analysis\n\n\n## Loading and preprocessing the data\n```{r}\n#Step 1\nstepdata<- read.csv(file = \"activity.csv\",header = TRUE, stringsAsFactors = FALSE )\n#useful variable - multiple uses\nnum_obs <- nrow(stepdata)\n#libraries\nlibrary(ggplot2)\n```\n\n\n## What is mean total number of steps taken per day?\n```{r histogram}\n#Step 2a\nsteps_per_day <-aggregate(data = stepdata, steps ~ date, FUN = sum )\nbinsize <- diff(range(steps_per_day$steps))/10\np <- ggplot(steps_per_day, aes(x=steps)) + geom_histogram(binwidth=binsize, fill=\"white\", colour=\"black\")\np + ggtitle(\"Histogram of Total Steps per Day (Raw)\")\n#Step 2b\nmean_steps <- format(mean(steps_per_day[,2], na.rm = TRUE), digits = 3, nsmall = 3)\nmedian_steps <- format(median(steps_per_day[,2], na.rm = TRUE), digits = 3, nsmall = 3)\n```\n\n\nThe mean number of steps per day, in the raw data is is `r mean_steps` and the median is `r median_steps`\n\n\n## What is the average daily activity pattern?\n```{r activity_pattern}\n#Step 3a\nsteps_per_time_slot <-aggregate(data = stepdata, steps ~ interval, FUN = mean )\nnum_time_slots<- nrow(steps_per_time_slot)\np<-ggplot(steps_per_time_slot, aes(x = interval, y = steps))+geom_line()\np + ggtitle(\"Average steps taken per 5 min interval\")\n#Step 3b\n#Get the row number of the maximum value\nidx<-row(steps_per_time_slot)[which.max(apply(steps_per_time_slot[2],MARGIN=1,max))]\n#max steps per time slot\nmax_steps<-format(steps_per_time_slot[idx,2], digits = 3, nsmall = 3)\n#the time slot when this ocurred\nmax_steps_time_slot<- steps_per_time_slot[idx,1]\n```\n\nThe maximum 5-minute interval, on average across all the days in the dataset was `r max_steps_time_slot` having a value of `r max_steps`.\n\n\n## Imputing missing values\n``` {r replace_Values}\n#Step 1\n#Calculate the number of missing values (NA)\nmissing_Values <- format(colSums(is.na(stepdata[1])), digits = 0)\n#Step 2\n# I have decided to replace NAs with the calculated mean for the time slot (from previously calculated steps_per_time_slot data frame). This is a general purpose solution but if there was a systematic reason for the NAs (eg hospital visit) replacing the NAs with zero would be more appropriate. We are not given this information, thus the choice of the mean per time slot\n\n#Step 3\n#Create the new dataset\nfixed_stepdata <- stepdata\n\nfor (x in 1:num_obs){\n    if (is.na(fixed_stepdata[x,1])) {\n        idx<-which(steps_per_time_slot$interval == fixed_stepdata[x,3])\n        fixed_stepdata[x,1]<- steps_per_time_slot[idx,2]\n    }\n}\n#Step 4a\n#Draw the histogram\nfixed_steps_per_day <-aggregate(data = fixed_stepdata, steps ~ date, FUN = sum )\nbinsize <- diff(range(fixed_steps_per_day$steps))/10\np <- ggplot(fixed_steps_per_day, aes(x=steps)) + geom_histogram(binwidth=binsize, fill=\"white\", colour=\"black\")\np + ggtitle(\"Histogram of Total Steps per Day (Fixed)\")\n#Step 4b\n#calculate mean and median\nfixed_mean_steps <- format(mean(fixed_steps_per_day[,2], na.rm = TRUE), digits = 3, nsmall = 3)\nfixed_median_steps <- format(median(fixed_steps_per_day[,2], na.rm = TRUE), digits = 3, nsmall = 3)\n#Step 4c\n#The mean number of steps is identical for the raw (stepdata)\n#and corrected data (fixed_stepdata) with a value of 10766.189.\n#This confirms the expected result of replacing the NAs with\n#average values as we are taking the average of an average (the #substituted values)\n#The median number of steps has increased from the raw value of \n# 10765 to 10766.189 in the fixed data which is also the mean for #the fixed data\n```\n\nThe total number of missing values in the raw dataset was `r missing_Values`.  \nI have decided to replace NAs with the calculated mean for the time slot This is a general purpose solution but if there was a systematic reason for the NAs (eg hospital visit) replacing the NAs with zero would be more appropriate. We are not given this information, thus the choice of the mean per time slot\n\nThe mean number of steps per day, in the fixed data is `r fixed_mean_steps` and the meadian is `r fixed_median_steps`\nThe mean number of steps is identical for the raw and corrected data (fixed) with a value of `r fixed_mean_steps`. This confirms the expected result of replacing the NAs with average values as we are taking the average of an average (the substituted values)\nThe median number of steps has increased from the raw value of `r median_steps` to `r fixed_median_steps` in the fixed data.\nThe net result of the fix, on the histogram is that the frequencies will have increased for those missing values which were replaced by the averages.\n\n\n\n\n## Are there differences in activity patterns between weekdays and weekends?\n``` {r weekday_weekend_plots}\n#Step 5\n#Create weekday/weekend factor variable (daytype)\ndftemp<- data.frame(daytype = character(num_obs) )\ndftemp[,1] <- weekdays(as.Date(fixed_stepdata[,2]))\nwe_count <- 0\nwd_count <- 0\nfor (x in 1:num_obs){\n    if (substr(weekdays(as.Date(fixed_stepdata[x,2])),1,1) == \"S\"){\n        dftemp[x,1] <- \"Weekend\"\n        we_count <- we_count + 1\n     } else {\n        dftemp[x,1] <- \"Weekday\"\n        wd_count <- wd_count + 1\n     }\n}\nfixed_stepdata <- cbind(fixed_stepdata,dftemp)\n#fixed_stepdata$daytype<- as.factor(fixed_stepdata$daytype)\n\nweekday_fixed_steps_per_time_slot <-aggregate(\n    data = subset(fixed_stepdata, daytype == \"Weekday\"), steps ~ interval, FUN = mean)\ndftemp<- data.frame(daytype = character(num_obs) )\ndftemp[,1]<- \"Weekday\"\nweekday_fixed_steps_per_time_slot <- cbind(weekday_fixed_steps_per_time_slot,dftemp)\n\nweekend_fixed_steps_per_time_slot <-aggregate(\n    data = subset(fixed_stepdata,daytype == \"Weekend\"), steps ~ interval, FUN = mean)\ndftemp[,1]<- \"Weekend\"\nweekend_fixed_steps_per_time_slot<-cbind(weekend_fixed_steps_per_time_slot,dftemp)\n\nalldata<- rbind(weekend_fixed_steps_per_time_slot,weekday_fixed_steps_per_time_slot)\nalldata$daytype<-as.factor(alldata$daytype)\n\np <- ggplot(alldata, aes(x=interval, y=steps)) + geom_line() \np + facet_grid(daytype ~. ) + ggtitle(\"Comparison of Activity between Weekdays and Weekends\")\n\n\n```\n\n\n\nThere are noticeable differences between the the weekday and weekend patterns. This is to be expected as the weekday activity would be lower due to the restrictions of office life. Free of these restrictions, the weekend activity is increased.",
    "created" : 1418314974103.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3161917077",
    "id" : "2D0DD24",
    "lastKnownWriteTime" : 1418597333,
    "path" : "C:/Coursera Courses/Data Science Specialisation/Reproducible Research/Week 2/Project 1/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}